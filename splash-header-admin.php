<?php/*  Plugin Name: Splash header  Plugin URI:  Description: Plugin to create splash header  Version: 1.18.0  Author: Zeesweb Team  Author URI: http://zeesweb.com  License: GPL2 */// If this file is called directly, abort.if (!defined('WPINC')) {    die;}// define variables define('SPLASHHEADER__PLUGIN_URL', plugin_dir_url(__FILE__));define('SPLASHHEADER__LANG_URL', plugin_basename(dirname(__FILE__)) . '/languages/');define('ASSETS', 'assets/');define('SPLASHHEADER_VERSION', '1.18.0');//The text domain name is  used to form the name of the MO file for your plugindefine('TEXT_DOMAIN', 'splash-header');//define the root url of the plugindefine('PLUGIN_SlUG', 'Splash_Header_Display');// number of posts or pagesdefine('NUMBER', 100);//define font size maxdefine('FONT_SIZE', 30);// register fonctions register_activation_hook(__FILE__, 'splash_header_activate');register_deactivation_hook(__FILE__, 'splash_header_deactivation');if (isset($_GET['tab']))    $tab = $_GET['tab'];else    $tab = 'general';/** *  Plugin init . */function splashheader_init() {    add_action('admin_enqueue_scripts', 'load_resources');    add_action('admin_menu', 'splash_header_admin_menu');    load_plugin_textdomain(TEXT_DOMAIN, false, SPLASHHEADER__LANG_URL);}function splash_header_admin() {    include('splash-header-admin-form.php');}/** *  Plugin admin menu . */function splash_header_admin_menu() {    global $tab;    // get tabs label    $tablabel = splashheader_get_tab_label($tab);    // This adds the main menu page    add_menu_page(__('Splash Header Display'), __('Splash Header'), 'manage_options', PLUGIN_SlUG, 'splash_header_admin', plugins_url('splash-header') . '/assets/menu-icon.png');    add_submenu_page(PLUGIN_SlUG, $tablabel, __('General'), 'manage_options', PLUGIN_SlUG, 'splash_header_admin');    add_submenu_page(PLUGIN_SlUG, __('Plugin Settings', TEXT_DOMAIN), __('Plugin Settings', TEXT_DOMAIN), 'manage_options', PLUGIN_SlUG . '&tab=homepage', 'splash_header_admin');    add_submenu_page(PLUGIN_SlUG, __('Design Settings', TEXT_DOMAIN), __('Design Settings', TEXT_DOMAIN), 'manage_options', PLUGIN_SlUG . '&tab=design', 'splash_header_admin');    add_submenu_page(PLUGIN_SlUG, __('Advanced Settings', TEXT_DOMAIN), __('Advanced Settings', TEXT_DOMAIN), 'manage_options', PLUGIN_SlUG . '&tab=advancedsettings', 'splash_header_admin');}/** *  Plugin load resources . */function load_resources() {    global $hook_suffix;    if (in_array($hook_suffix, array(                'toplevel_page_Splash_Header_Display',            ))) {        // Add the color picker css file               wp_enqueue_style('wp-color-picker');        wp_enqueue_script('wp-color-picker');        wp_enqueue_style('thickbox');        wp_register_style('sh-admin', SPLASHHEADER__PLUGIN_URL . ASSETS . 'css/sh-admin.css', array(), SPLASHHEADER_VERSION);        wp_enqueue_style('sh-admin');        // load media library        wp_enqueue_script('media-upload');        wp_enqueue_script('thickbox');        wp_register_script('splashheader', SPLASHHEADER__PLUGIN_URL . ASSETS . 'js/splashheader.js', array(), SPLASHHEADER_VERSION);        wp_enqueue_script('splashheader');    }}/* * Plugin activation */function splash_header_activate() {    add_option('sh_title');    add_option('sh_message');    add_option('sh_show');    add_option('sh_show_links_1');    add_option('sh_show_links_2');    add_option('sh_show_custom_code');    add_option('sh_bg_color');    add_option('sh_title_color');    add_option('sh_message_color');    add_option('sh_title_font_size');    add_option('sh_title_font_weight');    add_option('sh_title_font_style');    add_option('sh_title_font_decoration');    add_option('sh_message_font_size');    add_option('sh_message_font_weight');    add_option('sh_message_font_style');    add_option('sh_message_font_decoration');    add_option('sh_code_message');    add_option('sh_width');    add_option('sh_border_color');    add_option('sh_border_style');    add_option('sh_border_width');    add_option('sh_show_clock_date');    add_option('sh_show_clock_time');    add_option('sh_date_format');    add_option('sh_date_position');    add_option('sh_date_font_size');    add_option('sh_date_font_weight');    add_option('sh_date_font_color');    add_option('sh_date_font_style');    add_option('sh_date_font_decoration');    add_option('sh_time_format');    add_option('sh_time_position');    add_option('sh_time_font_size');    add_option('sh_time_font_color');    add_option('sh_time_font_weight');    add_option('sh_time_font_style');    add_option('sh_time_font_decoration');    for ($i = 1; $i <= 6; $i++) {        add_option('sh_link_title_' . $i);        add_option('sh_link_url_' . $i);        add_option('sh_link_title_color_' . $i);        add_option('sh_link_font_size_' . $i);        add_option('sh_link_thumb_img_' . $i);        add_option('sh_font_icon_' . $i);        add_option('sh_link_open_' . $i);        add_option('sh_link_font_weight_' . $i);        add_option('sh_link_font_style_' . $i);        add_option('sh_link_font_decoration_' . $i);        if ($i <= 4) {            add_option('sh_col_width_' . $i);        }    }}/** *  Plugin deactivation action . */function splash_header_deactivation() {    /*      delete_option('sh_show');      delete_option('sh_title');      delete_option('sh_show_links_1');      delete_option('sh_show_links_2');      delete_option('sh_show_custom_code');      delete_option('sh_message');      delete_option('sh_bg_color');      delete_option('sh_title_color');      delete_option('sh_message_color');      delete_option('sh_title_font_size');      delete_option('sh_message_font_size');      delete_option('sh_code_message');      delete_option('sh_width');      delete_option('sh_border_color');      delete_option('sh_border_style');      delete_option('sh_border_width');      delete_option('sh_show_clock_date');      delete_option('sh_show_clock_time');      delete_option('sh_date_format');      delete_option('sh_date_position');      for ($i = 1; $i <= 6; $i++) {      delete_option('sh_link_title_' . $i);      delete_option('sh_link_url_' . $i);      delete_option('sh_link_title_color_' . $i);      delete_option('sh_link_font_size_' . $i);      delete_option('sh_link_thumb_img_' . $i);      if ($i <= 4) {      delete_option('sh_col_width_' . $i);      }      }     */}add_action('init', 'splashheader_init');/** *  Plugin setting page link . */function add_splashheader_settings_link($links) {    $settings_link = '<a href="admin.php?page=Splash_Header_Display">' . __('Settings', TEXT_DOMAIN) . '</a>';    array_unshift($links, $settings_link);    return $links;}$plugin = plugin_basename(__FILE__);add_filter("plugin_action_links_$plugin", 'add_splashheader_settings_link');/** * Plugin short code . */function _splashheader_shortcode() {    wp_enqueue_style('splashheader', SPLASHHEADER__PLUGIN_URL . ASSETS . 'css/splashheader.css', array(), SPLASHHEADER_VERSION);    wp_enqueue_style('font-awesome', SPLASHHEADER__PLUGIN_URL . ASSETS . 'css/font-awesome.css', array(), SPLASHHEADER_VERSION);    $enabled = get_option('sh_show');    $enabled_links_1 = get_option('sh_show_links_1');    $enabled_links_2 = get_option('sh_show_links_2');    $enabled_custom_code = get_option('sh_show_custom_code');    $enabled_date = get_option('sh_show_clock_date');    $enabled_time = get_option('sh_show_clock_time');    $date_position = get_option('sh_date_position');    $date_font_size = get_option('sh_date_font_size');    $date_font_color = get_option('sh_date_font_color');    $date_format = get_option('sh_date_format');    $time_format = get_option('sh_time_format');    $color_element = 'color:';    $font_size_element = 'font-size:';    $font_weight_element = 'font-weight:';    $font_style_element = 'font-style:';    $font_decoration_element = 'text-decoration:';    $appearence = 0;    // get container width    $sh_width = get_option('sh_width');    // get cols width    for ($w = 1; $w <= 4; $w++) {        $sh_width_col = get_option('sh_col_width_' . $w);        if ($sh_width_col != '') {            $col_width_style[$w] = 'width:' . $sh_width_col . '%';        }    }    if ($sh_width == '') {        $sh_width = 85;    }    if ($enabled) {        $appearence++;        $border_color = get_option('sh_border_color');        if ($border_color != '') {            $border_style = get_option('sh_border_style');            if ($border_style == '')                $border_style = 'solid';            $border_width = get_option('sh_border_width');            if ($border_width == '')                $border_width = '1';        }        $title = get_option('sh_title');        $message = get_option('sh_message');        $title_font_size = get_option('sh_title_font_size');        $message_font_size = get_option('sh_message_font_size');        $title_font_weight = get_option('sh_title_font_weight');        $message_font_weight = get_option('sh_message_font_weight');        $title_font_style = get_option('sh_title_font_style');        $message_font_style = get_option('sh_message_font_style');        $title_font_decoration = get_option('sh_title_font_decoration');        $message_font_decoration = get_option('sh_message_font_decoration');        $title_color = get_option('sh_title_color');        $message_color = get_option('sh_message_color');        $bg_color = get_option('sh_bg_color');        $custom_code = get_option('sh_code_message');        //set splash header border color , style and width         if ($border_color != '') {            $sh_border_color = 'border-color:' . $border_color . '!important;';        }        if ($border_style != '') {            $sh_border_style = 'border-style:' . $border_style . '!important;';        }        if ($border_width != '') {            $sh_border_width = 'border-width:' . $border_width . 'px!important;';        }        // set background color for splach header        if ($bg_color != '') {            $sh_message_bgcolor = 'background-color:' . $bg_color . '!important;';        }        // set font color and size for title and message         if ($title_font_size != '')            $title_font_size = $font_size_element . $title_font_size . 'px!important;';        if ($title_font_weight != '')            $title_font_weight = $font_weight_element . $title_font_weight . '!important;';        if ($title_font_style != '')            $title_font_style = $font_style_element . $title_font_style . '!important;';        if ($title_font_decoration != '')            $title_font_decoration = $font_decoration_element . $title_font_decoration . '!important;';        if ($title_color != '')            $title_color = $color_element . $title_color . '!important;';        if ($message_font_size != '')            $message_font_size = $font_size_element . $message_font_size . 'px!important;';        if ($message_font_weight != '')            $message_font_weight = $font_weight_element . $message_font_weight . '!important;';        if ($message_font_style != '')            $message_font_style = $font_style_element . $message_font_style . '!important;';        if ($message_font_decoration != '')            $message_font_decoration = $font_decoration_element . $message_font_decoration . '!important;';        if ($message_color != '')            $message_color = $color_element . $message_color . ';';        if ($message_font_size != '' || $message_color != '' || $message_font_weight != '' || $message_font_style != '' || $message_font_decoration != '')            $style_message = $message_font_size . $message_color . $message_font_weight . $message_font_style . $message_font_decoration;    }    if ($enabled_links_1 && $sh_width_2 == '') {        $appearence++;    }    if ($enabled_links_2 && $sh_width_3 == '') {        $appearence++;    }    if ($enabled_custom_code && $sh_width_4 == '') {        $appearence++;    }    if ($appearence == 4)        $col_class = 'sh-col-25';    else if ($appearence == 3)        $col_class = 'sh-col-33';    else if ($appearence == 2)        $col_class = 'sh-col-50';    else if ($appearence == 1)        $col_class = 'sh-col-100';    if ($title != '') {        $title_div = '<h3 class="sh-title" style="' . $title_color . $title_font_size . $title_font_weight . $title_font_style . $title_font_decoration . 'margin:10px 0 0 0">' . $title . '</h3>';    }    if ($message != '') {        $message_div = ' <div class="sh-message" style="' . $style_message . 'margin:10px 0 0 0">' . $message . '</div>';    }    $current_date = splash_header_get_date($date_format);    $current_time = splash_header_get_time($time_format);    $date_position = get_option('sh_date_position');    $time_position = get_option('sh_time_position');    $date_font_size = get_option('sh_date_font_size');    $time_font_size = get_option('sh_time_font_size');    $date_font_color = get_option('sh_date_font_color');    $time_font_color = get_option('sh_time_font_color');    $date_font_weight = get_option('sh_date_font_weight');    $time_font_weight = get_option('sh_time_font_weight');    $date_font_style = get_option('sh_date_font_style');    $time_font_style = get_option('sh_time_font_style');    $date_font_decoration = get_option('sh_date_font_decoration');    $time_font_decoration = get_option('sh_time_font_decoration');    // date section     if ($date_position != '') {        $sh_date_position = 'text-align:' . $date_position . '!important;';    }    if ($date_font_size != '') {        $sh_date_font_size = 'font-size:' . $date_font_size . 'px!important;';    }    if ($date_font_color != '') {        $sh_date_font_color = 'color:' . $date_font_color . '!important;';    }    if ($date_font_weight != '') {        $sh_date_font_weight = 'font-weight:' . $date_font_weight . '!important;';    }    if ($date_font_style != '') {        $sh_date_font_style = 'font-style:' . $date_font_style . '!important;';    }    if ($date_font_decoration != '') {        $sh_date_font_decoration = 'text-decoration:' . $date_font_decoration . '!important;';    }    if ($enabled_date) {        $date_content = '<div class="splash-header-date" style="' . $sh_date_position . $sh_date_font_size . $sh_date_font_color . $sh_date_font_weight . $sh_date_font_style . $sh_date_font_decoration . '">' . $current_date . '</div>';    }    // time section     if ($time_position != '') {        $sh_time_position = 'text-align:' . $time_position . '!important;';    }    if ($time_font_size != '') {        $sh_time_font_size = 'font-size:' . $time_font_size . 'px!important;';    }    if ($time_font_color != '') {        $sh_time_font_color = 'color:' . $time_font_color . '!important;';    }    if ($time_font_weight != '') {        $sh_time_font_weight = 'font-weight:' . $time_font_weight . '!important;';    }    if ($time_font_style != '') {        $sh_time_font_style = 'font-style:' . $time_font_style . '!important;';    }    if ($time_font_decoration != '') {        $sh_time_font_decoration = 'text-decoration:' . $time_font_decoration . '!important;';    }    if ($enabled_time) {        $time_content = '<div class="splash-header-time" style="' . $sh_time_position . $sh_time_font_size . $sh_time_font_color . $sh_time_font_weight . $sh_time_font_style . $sh_time_font_decoration . '">' . $current_time . '</div>';    }    $content = '<div id="splash-header" class="splash-header" style="width:' . $sh_width . '%;' . $sh_message_bgcolor . $sh_border_style . $sh_border_width . 'margin:0 auto;' . $sh_border_color . '">'            . '<span>' . $date_content . $time_content . '</span><div class="sh-col ' . $col_class . '" style="' . $col_width_style[1] . '">' . $title_div . '' . $message_div . '</div>';    if ($enabled_links_1) {        $content .= '<div class="sh-col ' . $col_class . '" style="' . $col_width_style[2] . '">';        //set up links 1 section         for ($i = 1; $i <= 3; $i++) {            $img_element_1 = "";            // set font size             if (get_option('sh_link_font_size_' . $i) != '') {                $font_size_1 = $font_size_element . get_option('sh_link_font_size_' . $i) . "px;";            }            // set font weight             if (get_option('sh_link_font_weight_' . $i) != '') {                $font_weight_1 = $font_weight_element . get_option('sh_link_font_weight_' . $i) . ";";            }            // set font style             if (get_option('sh_link_font_style_' . $i) != '') {                $font_style_1 = $font_style_element . get_option('sh_link_font_style_' . $i) . ";";            }            // set font decoration             if (get_option('sh_link_font_decoration_' . $i) != '') {                $font_decoration_1 = $font_decoration_element . get_option('sh_link_font_decoration_' . $i) . ";";            }            // set font color             if (get_option('sh_link_title_color_' . $i) != '') {                $font_color_1 = $color_element . get_option('sh_link_title_color_' . $i) . ";";            }            // set font style            if ($font_size_1 != '' || $font_color_1 != '' || $font_weight_1 != '' || $font_style_1 != '' || $font_decoration_1 != '') {                $style_1 = 'style="' . $font_size_1 . $font_color_1 . $font_weight_1 . $font_style_1 . $font_decoration_1 . '"';            }            // set font awsome icon            if (get_option('sh_font_icon_' . $i) != '') {                $img_element_1 = '<span class="fa ' . get_option('sh_font_icon_' . $i) . '"></span>';            }            // set link target as _blank if its cheked            if (get_option('sh_link_open_' . $i))                $target = 'target="_blank"';            else                $target = 'target="_self"';            if (get_option('sh_link_title_' . $i) != '' && get_option('sh_link_url_' . $i) != '')                $content .= '<div class="sh-links">' . $img_element_1 . '<a ' . $style_1 . ' href="' . get_option('sh_link_url_' . $i) . '" ' . $target . '>' . get_option('sh_link_title_' . $i) . '</a></div>';        }        $content .= '</div>';    }    if ($enabled_links_2) {        $content .= '<div class="sh-col ' . $col_class . '" style="' . $col_width_style[3] . '">';        //set up links 2 sections        for ($i = 4; $i <= 6; $i++) {            // set font size             if (get_option('sh_link_font_size_' . $i) != '') {                $font_size_2 = $font_size_element . get_option('sh_link_font_size_' . $i) . "px;";            }            // set font weight             if (get_option('sh_link_font_weight_' . $i) != '') {                $font_weight_2 = $font_weight_element . get_option('sh_link_font_weight_' . $i) . ";";            }            // set font style             if (get_option('sh_link_font_style_' . $i) != '') {                $font_style_2 = $font_style_element . get_option('sh_link_font_style_' . $i) . ";";            }            // set font decoration             if (get_option('sh_link_font_decoration_' . $i) != '') {                $font_decoration_2 = $font_decoration_element . get_option('sh_link_font_decoration_' . $i) . ";";            }            // set font color             if (get_option('sh_link_title_color_' . $i) != '') {                $font_color_2 = $color_element . get_option('sh_link_title_color_' . $i) . ";";            }            // set font style              if ($font_size_2 != '' || $font_color_2 != '' || $font_weight_2 != '' || $font_style_2 != '' || $font_decoration_2 != '') {                $style_2 = 'style="' . $font_size_2 . $font_color_2 . $font_weight_2 . $font_style_2 . $font_decoration_2 . '"';            }            // set font icon             if (get_option('sh_font_icon_' . $i) != '') {                $img_element_2 = '<span class="fa ' . get_option('sh_font_icon_' . $i) . '"></span>';            }            // set link target as _blank if its cheked            if (get_option('sh_link_open_' . $i))                $target = 'target="_blank"';            else                $target = 'target="_self"';            if (get_option('sh_link_title_' . $i) != '' && get_option('sh_link_url_' . $i) != '')                $content .= '<div class="sh-links">' . $img_element_2 . '<a ' . $style_2 . '  href="' . get_option('sh_link_url_' . $i) . '"  ' . $target . '>' . get_option('sh_link_title_' . $i) . '</a></div>';        }        $content .= '</div>';    }    if ($enabled_custom_code) {        $content .= '    <div class="sh-col ' . $col_class . '" style="' . $col_width_style[4] . '">' . do_shortcode(get_option('sh_code_message')) . '</div>    </div><div class="sh-clearfix"></div>';    }    $content .= '</div>';    if ($enabled == 0) {        $content = '';    }    echo $content;}add_shortcode('splashheader', '_splashheader_shortcode');/** * return tab labels  . */function splashheader_get_tab_label($tabname) {    switch ($tabname) {        case "general":            $label = __('General Splash Header', TEXT_DOMAIN);            break;        case "homepage":            $label = __('Plugin Settings', TEXT_DOMAIN);            break;        case "design":            $label = __('Design Design', TEXT_DOMAIN);            break;        case "advancedsettings":            $label = __('Advanced Settings', TEXT_DOMAIN);            break;    }    return $label;}/* * @param Integer $counter element id counter * return recent list of wordpress posts */function splash_header_recentposts_dropdown($counter) {    $args = array('numberposts' => NUMBER, 'post_status' => 'publish');    $recent_posts = wp_get_recent_posts($args);    $elem = '';    $elem = '<select id="sh_recentpost_' . $counter . '" style="width:180px">		<option  value="" selected>' . __('Select a post', TEXT_DOMAIN) . '<option>';    foreach ($recent_posts as $recent) {        $elem .= '<option value="' . get_permalink($recent["ID"]) . '">' . $recent["post_title"] . '</option> ';    }    $elem .= '</select>';    return $elem;}/* * @param Integer $counter element id counter * @return recent pages of wordpress posts */function splash_header_recentpages_dropdown($counter) {    $args = array('number' => NUMBER, 'post_status' => 'publish');    $recent_pages = get_pages($args);    $elem = '';    $elem = '<select id="sh_recentpages_' . $counter . '" style="width:180px">		<option  value="" selected>' . __('Select a page', TEXT_DOMAIN) . '<option>';    foreach ($recent_pages as $recent) {        $elem .= '<option value="' . get_page_link($recent->ID) . '">' . $recent->post_title . '</option> ';    }    $elem .= '</select>';    return $elem;}/** * admin tabs . */function splash_header_admin_tabs($current = 'general') {    $tabs = array('general' => __('General'), 'homepage' => __('Plugin Settings', TEXT_DOMAIN), 'design' => __('Design Settings', TEXT_DOMAIN), 'advancedsettings' => __('Advanced Settings', TEXT_DOMAIN));    echo '<div id="icon-themes" class="icon32"><br></div>';    echo '<h2 class="nav-tab-wrapper">';    foreach ($tabs as $tab => $name) {        $class = ( $tab == $current ) ? ' nav-tab-active' : '';        echo "<a class='nav-tab$class' href='?page=Splash_Header_Display&tab=$tab'>$name</a>";    }    echo '</h2>';}/** * Converts current time for given timezone (considering DST) *  to 14-digit UTC timestamp (YYYYMMDDHHMMSS) * DateTime requires PHP >= 5.2 * @param $timezone timezone * @return string */function splash_header_get_date($format) {    // default wordpress format     $date = "";    if (get_option('timezone_string') == '') {        $timezone = date_default_timezone_get();    } else {        $timezone = get_option('timezone_string');    }    if ($format == '') {        $format = get_option('date_format');    }    if ($timezone != '') {        $tz = $timezone;        $timestamp = time();        $dt = new DateTime("now", new DateTimeZone($tz));        $dt->setTimestamp($timestamp);        $date = $dt->format($format);    }    return $date;}/** * Converts current time for given timezone (considering DST) *  to 14-digit UTC timestamp (YYYYMMDDHHMMSS) * DateTime requires PHP >= 5.2 * @param $timezone timezone * @return string */function splash_header_get_time($format) {    // default wordpress format     $date = "";    if (get_option('timezone_string') == '') {        $timezone = date_default_timezone_get();    } else {        $timezone = get_option('timezone_string');    }    if ($format == '') {        $format = get_option('time_format');    }    if ($timezone != '') {        $tz = $timezone;        $timestamp = time();        $dt = new DateTime("now", new DateTimeZone($tz));        $dt->setTimestamp($timestamp);        $date = $dt->format($format);    }    return $date;}/* * @param String $selected_value selected date by user * @return date selected */function splash_header_get_date_format($selected_value) {    $format_arr = array(        'F j, Y' => splash_header_get_date('F j, Y'),        'Y-m-d' => splash_header_get_date('Y-m-d'),        'm/d/Y' => splash_header_get_date('m/d/Y'),        'd/m/Y' => splash_header_get_date('d/m/Y'),        'm.d.y' => splash_header_get_date('m.d.y'),        'j, n, Y' => splash_header_get_date('j, n, Y'),        'D M j' => splash_header_get_date('D M j'),        'd/m/Y' => splash_header_get_date('d/m/Y'),    );    $elem = '';    $elem = '<select id="sh_date_format"  name="sh_date_format" style="width:220px">		<option  value=""   >' . __('Select date format', TEXT_DOMAIN) . '<option>';    // check if user has saved his timezone settings    $bool = true;    foreach ($format_arr as $key => $value) {        $user_selection = '';        if ($value == '') {            $bool = false;        } else {            if ($selected_value == $key) {                $user_selection = 'selected';            }            $elem .= '<option value="' . $key . '"  ' . $user_selection . '>' . $value . '</option> ';        }    }    $elem .= '</select>';    if ($bool == false) {        $elem = "";    }    return $elem;}/* * @param String $selected_value selected time by user * @return time selected */function splash_header_get_time_format($selected_value) {    $format_arr = array(        'g:i a' => splash_header_get_time('g:i a'),        'g:i A' => splash_header_get_time('g:i A'),        'H:i' => splash_header_get_time('H:i'),        'H:i:s' => splash_header_get_time('H:i:s'),    );    $elem = '';    $elem = '<select id="sh_time_format"  name="sh_time_format" style="width:220px">		<option  value=""   >' . __('Select time format', TEXT_DOMAIN) . '<option>';    // check if user has saved his timezone settings    $bool = true;    foreach ($format_arr as $key => $value) {        $user_selection = '';        if ($value == '') {            $bool = false;        } else {            if ($selected_value == $key) {                $user_selection = 'selected';            }            $elem .= '<option value="' . $key . '"  ' . $user_selection . '>' . $value . '</option> ';        }    }    $elem .= '</select>';    if ($bool == false) {        $elem = "";    }    return $elem;}/* * @param String $selected_value selected date position by user * @return date posiition ( left , right , center )  */function splash_header_get_date_position($selected_value) {    $positon_arr = array(        'left' => __('Left'),        'center' => __('Center'),        'right' => __('Right'),    );    $elem = '';    $elem = '<select id="sh_date_position"  name="sh_date_position" style="width:180px">';    foreach ($positon_arr as $key => $value) {        $user_selection = '';        if ($selected_value == $key) {            $user_selection = 'selected';        }        $elem .= '<option value="' . $key . '" ' . $user_selection . '>' . $value . '</option> ';    }    $elem .= '</select>';    return $elem;}/* * @param String $selected_value selected time by user * @return time posiition ( left , right , center )  */function splash_header_get_time_position($selected_value) {    $positon_arr = array(        'left' => __('Left'),        'center' => __('Center'),        'right' => __('Right'),    );    $elem = '';    $elem = '<select id="sh_time_position"  name="sh_time_position" style="width:180px">';    foreach ($positon_arr as $key => $value) {        $user_selection = '';        if ($selected_value == $key) {            $user_selection = 'selected';        }        $elem .= '<option value="' . $key . '" ' . $user_selection . '>' . $value . '</option> ';    }    $elem .= '</select>';    return $elem;}/* * @param String $selected_value selected date font by user * @return  font weight  ( normal, bold , bolder ... )  */function splash_header_get_date_font_weight($selected_value) {    $weight_arr = array(        'normal' => __('Normal'),        'bold' => __('Bold'),        'bolder' => __('Bolder'),        'lighter' => __('Lighter'),        '100' => __('100'),        '200' => __('200'),        '300' => __('300'),        '400' => __('400'),        '500' => __('500'),        '600' => __('600'),        '700' => __('700'),        '800' => __('800'),        '900' => __('900'),    );    $elem = '';    $elem = '<select id="sh_date_font_weight"  name="sh_date_font_weight" style="width:180px">';    foreach ($weight_arr as $key => $value) {        $user_selection = '';        if ($selected_value == $key) {            $user_selection = 'selected';        }        $elem .= '<option value="' . $key . '" ' . $user_selection . '>' . $value . '</option> ';    }    $elem .= '</select>';    return $elem;}/* * @param String $selected_value selected time font by user * @return  font weight  ( normal, bold , bolder ... )  */function splash_header_get_time_font_weight($selected_value) {    $weight_arr = array(        'normal' => __('Normal'),        'bold' => __('Bold'),        'bolder' => __('Bolder'),        'lighter' => __('Lighter'),        '100' => __('100'),        '200' => __('200'),        '300' => __('300'),        '400' => __('400'),        '500' => __('500'),        '600' => __('600'),        '700' => __('700'),        '800' => __('800'),        '900' => __('900'),    );    $elem = '';    $elem = '<select id="sh_time_font_weight"  name="sh_time_font_weight" style="width:180px">';    foreach ($weight_arr as $key => $value) {        $user_selection = '';        if ($selected_value == $key) {            $user_selection = 'selected';        }        $elem .= '<option value="' . $key . '" ' . $user_selection . '>' . $value . '</option> ';    }    $elem .= '</select>';    return $elem;}/* * @param String $selected_value selected time font style by user * @return  font style  ( normal, bold , bolder ... )  */function splash_header_get_time_font_style($selected_value) {    $style_arr = array(        'normal' => __('Normal'),        'italic' => __('Italic'),        'oblique' => __('Oblique'),    );    $elem = '';    $elem = '<select id="sh_time_font_style"  name="sh_time_font_style" style="width:180px">';    foreach ($style_arr as $key => $value) {        $user_selection = '';        if ($selected_value == $key) {            $user_selection = 'selected';        }        $elem .= '<option value="' . $key . '" ' . $user_selection . '>' . $value . '</option> ';    }    $elem .= '</select>';    return $elem;}/* * @param String $selected_value selected time font by user * @return  font weight  ( normal, bold , bolder ... )  */function splash_header_get_time_font_decoration($selected_value) {    $decoration_arr = array(        'none' => __('None'),        'overline' => __('Overline'),        'line-through' => __('Line through'),        'underline' => __('Underline'),        'underline overline' => __('Underline overline'),    );    $elem = '';    $elem = '<select id="sh_time_font_decoration"  name="sh_time_font_decoration" style="width:180px">';    foreach ($decoration_arr as $key => $value) {        $user_selection = '';        if ($selected_value == $key) {            $user_selection = 'selected';        }        $elem .= '<option value="' . $key . '" ' . $user_selection . '>' . $value . '</option> ';    }    $elem .= '</select>';    return $elem;}/* * @param String $selected_value selected date font style by user * @return  font style   */function splash_header_get_date_font_style($selected_value) {    $style_arr = array(        'normal' => __('Normal'),        'italic' => __('Italic'),        'oblique' => __('Oblique'),    );    $elem = '';    $elem = '<select id="sh_date_font_style"  name="sh_date_font_style" style="width:180px">';    foreach ($style_arr as $key => $value) {        $user_selection = '';        if ($selected_value == $key) {            $user_selection = 'selected';        }        $elem .= '<option value="' . $key . '" ' . $user_selection . '>' . $value . '</option> ';    }    $elem .= '</select>';    return $elem;}/* * @param String $selected_value selected time font by user * @return  font weight  ( normal, bold , bolder ... )  */function splash_header_get_date_font_decoration($selected_value) {    $decorationt_arr = array(        'none' => __('None'),        'overline' => __('Overline'),        'line-through' => __('Line through'),        'underline' => __('Underline'),        'underline overline' => __('Underline overline'),    );    $elem = '';    $elem = '<select id="sh_date_font_decoration"  name="sh_date_font_decoration" style="width:180px">';    foreach ($decorationt_arr as $key => $value) {        $user_selection = '';        if ($selected_value == $key) {            $user_selection = 'selected';        }        $elem .= '<option value="' . $key . '" ' . $user_selection . '>' . $value . '</option> ';    }    $elem .= '</select>';    return $elem;}function enqueue_plugin_scripts($plugin_array) {    //enqueue TinyMCE plugin script with its ID.    $plugin_array["splash_header"] = plugin_dir_url(__FILE__) . "assets/js/editor_plugin.js";    return $plugin_array;}add_filter("mce_external_plugins", "enqueue_plugin_scripts");function register_buttons_editor($buttons) {    //register buttons with their id.    array_push($buttons, "shortcode");    return $buttons;}add_filter("mce_buttons", "register_buttons_editor");function ajax_splashheader_dashboard_welcome() {    include(SPLASHHEADER__PLUGIN_URL . '/views/wordpress-dashboard-welcome-page.php');    exit;}add_action('wp_ajax_splashheader_dashboard_welcome', 'ajax_splashheader_dashboard_welcome');add_action('wp_dashboard_setup', 'my_custom_dashboard_widgets');function my_custom_dashboard_widgets() {    global $wp_meta_boxes;    wp_add_dashboard_widget('custom_help_widget', 'Splash Header Info', 'custom_dashboard_help');}function _splash_header_preview() {    wp_enqueue_style('splashheader', SPLASHHEADER__PLUGIN_URL . ASSETS . 'css/splashheader.css', array(), SPLASHHEADER_VERSION);    wp_enqueue_style('font-awesome', SPLASHHEADER__PLUGIN_URL . ASSETS . 'css/font-awesome.css', array(), SPLASHHEADER_VERSION);    $enabled = 1;    ;    $enabled_links_1 = get_option('sh_show_links_1');    $enabled_links_2 = get_option('sh_show_links_2');    $enabled_custom_code = get_option('sh_show_custom_code');    $enabled_date = get_option('sh_show_clock_date');    $enabled_time = get_option('sh_show_clock_time');    $date_position = get_option('sh_date_position');    $date_font_size = get_option('sh_date_font_size');    $date_font_color = get_option('sh_date_font_color');    $date_format = get_option('sh_date_format');    $time_format = get_option('sh_time_format');    $color_element = 'color:';    $font_size_element = 'font-size:';    $font_weight_element = 'font-weight:';    $font_style_element = 'font-style:';    $font_decoration_element = 'text-decoration:';    $appearence = 0;    // get container width    $sh_width = get_option('sh_width');    // get cols width    for ($w = 1; $w <= 4; $w++) {        $sh_width_col = get_option('sh_col_width_' . $w);        if ($sh_width_col != '') {            $col_width_style[$w] = 'width:' . $sh_width_col . '%';        }    }    if ($sh_width == '') {        $sh_width = 85;    }    if ($enabled) {        $appearence++;        $border_color = get_option('sh_border_color');        if ($border_color != '') {            $border_style = get_option('sh_border_style');            if ($border_style == '')                $border_style = 'solid';            $border_width = get_option('sh_border_width');            if ($border_width == '')                $border_width = '1';        }        $title = get_option('sh_title');        $message = get_option('sh_message');        $title_font_size = get_option('sh_title_font_size');        $message_font_size = get_option('sh_message_font_size');        $title_font_weight = get_option('sh_title_font_weight');        $message_font_weight = get_option('sh_message_font_weight');        $title_font_style = get_option('sh_title_font_style');        $message_font_style = get_option('sh_message_font_style');        $title_font_decoration = get_option('sh_title_font_decoration');        $message_font_decoration = get_option('sh_message_font_decoration');        $title_color = get_option('sh_title_color');        $message_color = get_option('sh_message_color');        $bg_color = get_option('sh_bg_color');        $custom_code = get_option('sh_code_message');        //set splash header border color , style and width         if ($border_color != '') {            $sh_border_color = 'border-color:' . $border_color . '!important;';        }        if ($border_style != '') {            $sh_border_style = 'border-style:' . $border_style . '!important;';        }        if ($border_width != '') {            $sh_border_width = 'border-width:' . $border_width . 'px!important;';        }        // set background color for splach header        if ($bg_color != '') {            $sh_message_bgcolor = 'background-color:' . $bg_color . '!important;';        }        // set font color and size for title and message         if ($title_font_size != '')            $title_font_size = $font_size_element . $title_font_size . 'px!important;';        if ($title_font_weight != '')            $title_font_weight = $font_weight_element . $title_font_weight . '!important;';        if ($title_font_style != '')            $title_font_style = $font_style_element . $title_font_style . '!important;';        if ($title_font_decoration != '')            $title_font_decoration = $font_decoration_element . $title_font_decoration . '!important;';        if ($title_color != '')            $title_color = $color_element . $title_color . '!important;';        if ($message_font_size != '')            $message_font_size = $font_size_element . $message_font_size . 'px!important;';        if ($message_font_weight != '')            $message_font_weight = $font_weight_element . $message_font_weight . '!important;';        if ($message_font_style != '')            $message_font_style = $font_style_element . $message_font_style . '!important;';        if ($message_font_decoration != '')            $message_font_decoration = $font_decoration_element . $message_font_decoration . '!important;';        if ($message_color != '')            $message_color = $color_element . $message_color . ';';        if ($message_font_size != '' || $message_color != '' || $message_font_weight != '' || $message_font_style != '' || $message_font_decoration != '')            $style_message = $message_font_size . $message_color . $message_font_weight . $message_font_style . $message_font_decoration;    }    if ($enabled_links_1 && $sh_width_2 == '') {        $appearence++;    }    if ($enabled_links_2 && $sh_width_3 == '') {        $appearence++;    }    if ($enabled_custom_code && $sh_width_4 == '') {        $appearence++;    }    if ($appearence == 4)        $col_class = 'sh-col-25';    else if ($appearence == 3)        $col_class = 'sh-col-33';    else if ($appearence == 2)        $col_class = 'sh-col-50';    else if ($appearence == 1)        $col_class = 'sh-col-100';    if ($title != '') {        $title_div = '<h3 class="sh-title" style="' . $title_color . $title_font_size . $title_font_weight . $title_font_style . $title_font_decoration . 'margin:10px 0 0 0">' . $title . '</h3>';    }    if ($message != '') {        $message_div = ' <div class="sh-message" style="' . $style_message . 'margin:10px 0 0 0">' . $message . '</div>';    }    $current_date = splash_header_get_date($date_format);    $current_time = splash_header_get_time($time_format);    $date_position = get_option('sh_date_position');    $time_position = get_option('sh_time_position');    $date_font_size = get_option('sh_date_font_size');    $time_font_size = get_option('sh_time_font_size');    $date_font_color = get_option('sh_date_font_color');    $time_font_color = get_option('sh_time_font_color');    $date_font_weight = get_option('sh_date_font_weight');    $time_font_weight = get_option('sh_time_font_weight');    $date_font_style = get_option('sh_date_font_style');    $time_font_style = get_option('sh_time_font_style');    $date_font_decoration = get_option('sh_date_font_decoration');    $time_font_decoration = get_option('sh_time_font_decoration');    // date section     if ($date_position != '') {        $sh_date_position = 'text-align:' . $date_position . '!important;';    }    if ($date_font_size != '') {        $sh_date_font_size = 'font-size:' . $date_font_size . 'px!important;';    }    if ($date_font_color != '') {        $sh_date_font_color = 'color:' . $date_font_color . '!important;';    }    if ($date_font_weight != '') {        $sh_date_font_weight = 'font-weight:' . $date_font_weight . '!important;';    }    if ($date_font_style != '') {        $sh_date_font_style = 'font-style:' . $date_font_style . '!important;';    }    if ($date_font_decoration != '') {        $sh_date_font_decoration = 'text-decoration:' . $date_font_decoration . '!important;';    }    if ($enabled_date) {        $date_content = '<div class="splash-header-date" style="' . $sh_date_position . $sh_date_font_size . $sh_date_font_color . $sh_date_font_weight . $sh_date_font_style . $sh_date_font_decoration . '">' . $current_date . '</div>';    }    // time section     if ($time_position != '') {        $sh_time_position = 'text-align:' . $time_position . '!important;';    }    if ($time_font_size != '') {        $sh_time_font_size = 'font-size:' . $time_font_size . 'px!important;';    }    if ($time_font_color != '') {        $sh_time_font_color = 'color:' . $time_font_color . '!important;';    }    if ($time_font_weight != '') {        $sh_time_font_weight = 'font-weight:' . $time_font_weight . '!important;';    }    if ($time_font_style != '') {        $sh_time_font_style = 'font-style:' . $time_font_style . '!important;';    }    if ($time_font_decoration != '') {        $sh_time_font_decoration = 'text-decoration:' . $time_font_decoration . '!important;';    }    if ($enabled_time) {        $time_content = '<div class="splash-header-time" style="' . $sh_time_position . $sh_time_font_size . $sh_time_font_color . $sh_time_font_weight . $sh_time_font_style . $sh_time_font_decoration . '">' . $current_time . '</div>';    }    $content .= '<div id="splash-header" class="splash-header" style="width:' . $sh_width . '%;' . $sh_message_bgcolor . $sh_border_style . $sh_border_width . 'margin:0 auto;' . $sh_border_color . '">'            . '<span>' . $date_content . $time_content . '</span><div class="sh-col ' . $col_class . '" style="' . $col_width_style[1] . '">' . $title_div . '' . $message_div . '</div>';    if ($enabled_links_1) {        $content .= '<div class="sh-col ' . $col_class . '" style="' . $col_width_style[2] . '">';        //set up links 1 section         for ($i = 1; $i <= 3; $i++) {            $img_element_1 = "";            // set font size             if (get_option('sh_link_font_size_' . $i) != '') {                $font_size_1 = $font_size_element . get_option('sh_link_font_size_' . $i) . "px;";            }            // set font weight             if (get_option('sh_link_font_weight_' . $i) != '') {                $font_weight_1 = $font_weight_element . get_option('sh_link_font_weight_' . $i) . ";";            }            // set font style             if (get_option('sh_link_font_style_' . $i) != '') {                $font_style_1 = $font_style_element . get_option('sh_link_font_style_' . $i) . ";";            }            // set font decoration             if (get_option('sh_link_font_decoration_' . $i) != '') {                $font_decoration_1 = $font_decoration_element . get_option('sh_link_font_decoration_' . $i) . ";";            }            // set font color             if (get_option('sh_link_title_color_' . $i) != '') {                $font_color_1 = $color_element . get_option('sh_link_title_color_' . $i) . ";";            }            // set font style            if ($font_size_1 != '' || $font_color_1 != '' || $font_weight_1 != '' || $font_style_1 != '' || $font_decoration_1 != '') {                $style_1 = 'style="' . $font_size_1 . $font_color_1 . $font_weight_1 . $font_style_1 . $font_decoration_1 . '"';            }            // set font awsome icon            if (get_option('sh_font_icon_' . $i) != '') {                $img_element_1 = '<span class="fa ' . get_option('sh_font_icon_' . $i) . '"></span>';            }            // set link target as _blank if its cheked            if (get_option('sh_link_open_' . $i))                $target = 'target="_blank"';            else                $target = 'target="_self"';            if (get_option('sh_link_title_' . $i) != '' && get_option('sh_link_url_' . $i) != '')                $content .= '<div class="sh-links">' . $img_element_1 . '<a ' . $style_1 . ' href="' . get_option('sh_link_url_' . $i) . '" ' . $target . '>' . get_option('sh_link_title_' . $i) . '</a></div>';        }        $content .= '</div>';    }    if ($enabled_links_2) {        $content .= '<div class="sh-col ' . $col_class . '" style="' . $col_width_style[3] . '">';        //set up links 2 sections        for ($i = 4; $i <= 6; $i++) {            // set font size             if (get_option('sh_link_font_size_' . $i) != '') {                $font_size_2 = $font_size_element . get_option('sh_link_font_size_' . $i) . "px;";            }            // set font weight             if (get_option('sh_link_font_weight_' . $i) != '') {                $font_weight_2 = $font_weight_element . get_option('sh_link_font_weight_' . $i) . ";";            }            // set font style             if (get_option('sh_link_font_style_' . $i) != '') {                $font_style_2 = $font_style_element . get_option('sh_link_font_style_' . $i) . ";";            }            // set font decoration             if (get_option('sh_link_font_decoration_' . $i) != '') {                $font_decoration_2 = $font_decoration_element . get_option('sh_link_font_decoration_' . $i) . ";";            }            // set font color             if (get_option('sh_link_title_color_' . $i) != '') {                $font_color_2 = $color_element . get_option('sh_link_title_color_' . $i) . ";";            }            // set font style              if ($font_size_2 != '' || $font_color_2 != '' || $font_weight_2 != '' || $font_style_2 != '' || $font_decoration_2 != '') {                $style_2 = 'style="' . $font_size_2 . $font_color_2 . $font_weight_2 . $font_style_2 . $font_decoration_2 . '"';            }            // set font icon             if (get_option('sh_font_icon_' . $i) != '') {                $img_element_2 = '<span class="fa ' . get_option('sh_font_icon_' . $i) . '"></span>';            }            // set link target as _blank if its cheked            if (get_option('sh_link_open_' . $i))                $target = 'target="_blank"';            else                $target = 'target="_self"';            if (get_option('sh_link_title_' . $i) != '' && get_option('sh_link_url_' . $i) != '')                $content .= '<div class="sh-links">' . $img_element_2 . '<a ' . $style_2 . '  href="' . get_option('sh_link_url_' . $i) . '"  ' . $target . '>' . get_option('sh_link_title_' . $i) . '</a></div>';        }        $content .= '</div>';    }    if ($enabled_custom_code) {        $content .= '    <div class="sh-col ' . $col_class . '" style="' . $col_width_style[4] . '">' . do_shortcode(get_option('sh_code_message')) . '</div>    </div><div class="sh-clearfix"></div>';    }    $content .= '</div>';    if ($enabled == 0) {        $content = '';    }    echo $content;}function custom_dashboard_help() {    $dashboard = '<div class="survey-wrapper">	<a style=" font-size:16px;"  href="https://goo.gl/forms/lf71KyVdnTrudXpx1" target="_blank">Help us improving our plugin by taking this survey!</a> 	</div>';    $dashboard .= '<div class="survey-wrapper"> <br/>	<a style=" font-size:16px;color: red;" href="admin.php?page=Splash_Header_Display&tab=general" target="_blank">Take a look of how the splash header is displayed</a> 	</div>';    $dashboard .= '<br/><br/>        <div style="font-size:20px;margin-bottom:20px">Preview of your splash header:</div>';    echo $dashboard;    _splash_header_preview();}?>